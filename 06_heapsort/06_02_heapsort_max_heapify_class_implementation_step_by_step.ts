// NOTE: Gotta admit, this was generated by ChatGPT after being against the
// ropes for a while. The previous barebones class implementation was mine tho.
// I think heapSize can be its own attribute/property (?) as the book examples.
// Although I'm not sure, this stays here for further study and memorization.

// TODO: Actually learn it.

class MaxHeap {
  private heap: number[];

  constructor(array: number[]) {
    this.heap = array;
  }

  public maxHeapify(i: number): void {
    const heapSize = this.heap.length;
    const left = 2 * i;
    const right = 2 * i + 1;
    let largest;

    if (left <= heapSize && this.heap[left - 1] > this.heap[i - 1]) {
      largest = left;
    } else {
      largest = i;
    }

    if (right <= heapSize && this.heap[right - 1] > this.heap[largest - 1]) {
      largest = right;
    }

    if (largest !== i) {
      this.swap(i - 1, largest - 1);
      this.maxHeapify(largest);
    }
  }

  private swap(i: number, j: number): void {
    const temp = this.heap[i];
    this.heap[i] = this.heap[j];
    this.heap[j] = temp;
  }
}

// Example usage:
const array = [27, 17, 3, 16, 13, 10, 1, 5, 7, 12, 4, 8, 9, 0];
const maxHeap = new MaxHeap(array);
maxHeap.maxHeapify(3);
console.log(maxHeap); // The heap after applying MAX-HEAPIFY to index 3
